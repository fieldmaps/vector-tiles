- hosts: all
  tasks:
    - name: Mount volume
      ansible.posix.mount:
        src: /dev/disk/by-id/scsi-0DO_Volume_tileserver-gl
        path: /mnt/tileserver_gl
        opts: discard,defaults,noatime
        state: mounted
        fstype: ext4
    - name: Add apt keys
      apt_key:
        url: "{{ item }}"
      loop:
        - https://repos.insights.digitalocean.com/sonar-agent.asc
        - https://nginx.org/keys/nginx_signing.key
        - https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    - name: Add apt repositories
      apt_repository:
        repo: "{{ item }}"
      loop:
        - deb https://repos.insights.digitalocean.com/apt/do-agent/ main main
        - deb https://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx
        - deb https://deb.nodesource.com/node_{{ NODEJS_VERSION }}.x/ {{ ansible_distribution_release }} main
    - name: Upgrade apt packages
      apt:
        upgrade: full
        update_cache: yes
    - name: Install apt packages
      apt:
        name:
          - do-agent
          - nginx
          - nodejs
          - s3cmd
          - ufw
        state: latest
        update_cache: yes
    - name: Enable firewall
      ufw:
        state: enabled
        rule: allow
        name: "{{ item }}"
      loop:
        - ssh
        - www secure
    - name: Install npm packages
      npm:
        name: tileserver-gl-light
        global: yes
        state: latest
    - name: Copy certificates
      copy:
        src: "~/.ssl/{{ item.src }}.pem"
        dest: "/etc/ssl/{{ item.dest }}.pem"
      loop:
        - { src: "tiles.fieldmaps.io.private", dest: "private/fieldmaps" }
        - { src: "tiles.fieldmaps.io.public", dest: "certs/fieldmaps" }
        - { src: "cloudflare.public", dest: "certs/cloudflare" }
    - name: Copy nginx.conf
      copy:
        src: default.conf
        dest: /etc/nginx/conf.d/default.conf
    - name: Copy services
      copy:
        src: tileserver-gl.service
        dest: /etc/systemd/system/tileserver-gl.service
    - name: Copy s3cfg
      copy:
        src: ~/.s3cfg
        dest: .s3cfg
    - name: Sync tiles
      shell: s3cmd sync --delete-removed s3://data.fieldmaps.io/tileserver_gl /mnt/
      register: result
      until: result.rc == 0
    - name: Start services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - tileserver-gl
        - nginx
    - name: Reboot machine
      reboot:
